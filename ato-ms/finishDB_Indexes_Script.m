pathHandler('load');
databaseFileImport('ircamSpectralDB_SAVING.db', 'ircamSpectralDB', 'localhost', 'root', []);
DROP_Names = {'SpectralFlatness', 'SpectralFlatnessDimension', ...
    'SpectralCrest', 'SpectralCrestDimension', 'TimeFrame', ...
    'TimeFrameMean', 'TimeFrameStdDev', 'TimeFrameTString', ...
    'HarmonicSpectralVariationMean', 'HarmonicSpectralVariationStdDev', ...
    'HarmonicSpectralVariationTString', 'HarmonicSpectralVariation', ...   
    'NoiseSpectralVariationMean', 'NoiseSpectralVariationStdDev', ...
    'NoiseSpectralVariationTString', 'NoiseSpectralVariation', 'MelEnergy', ...
	'PartialsFrequencyDimension', 'PartialsAmplitudeDimension', ...
	'PartialsMeanFrequencyDimension', 'PartialsMeanAmplitudeDimension', ...
	'PartialsEnergyDimension'};
TS_Indexes = {'TotalEnergy', 'HarmonicEnergy', 'NoiseEnergy', ...
    'EnergyEnvelope', 'FundamentalFrequency', 'Noisiness', ...
    'Inharmonicity', 'HarmonicSpectralCentroid', ...
    'HarmonicSpectralSpread', 'HarmonicSpectralSkewness', ...
    'NoiseSpectralCentroid', 'PerceptualSpectralCentroid', ...
    'NoiseSpectralSpread', 'NoiseSpectralSkewness', ...
    'PerceptualSpectralSpread', 'PerceptualSpectralSkewness', ...
    'Loudness', 'Sharpness', 'Spread', 'SpectralCentroid', ...
    'SpectralSpread', 'SpectralSkewness', 'SpectralVariation'};
SQL_Indexes = {'name', 'file', 'source', 'instrument', 'family', ...
    'playingStyle', 'dynamics', 'note', 'pitchClass', 'octave', ...
    'stringMute', 'brassMute', 'duration', 'TotalEnergyMean' ...
    'TotalEnergyStdDev', 'HarmonicEnergyMean', 'HarmonicEnergyStdDev', ...
    'NoiseEnergyMean', 'NoiseEnergyStdDev', 'EnergyEnvelopeMean', ...
    'EnergyEnvelopeStdDev', 'FluctuationStrength', 'Roughness', ...
    'FundamentalFrequencyMean', 'FundamentalFrequencyStdDev', ...
    'NoisinessMean', 'NoisinessStdDev', 'InharmonicityMean', ...
    'InharmonicityStdDev', 'HarmonicSpectralCentroidMean', ...
    'HarmonicSpectralCentroidStdDev', 'HarmonicSpectralSpreadMean', ...
    'HarmonicSpectralSpreadStdDev', 'HarmonicSpectralSkewnessMean', ...
    'HarmonicSpectralSkewnessStdDev', 'NoiseSpectralCentroidMean', ...
    'NoiseSpectralCentroidStdDev', 'NoiseSpectralSpreadMean', ...
    'NoiseSpectralSpreadStdDev', 'NoiseSpectralSkewnessMean', ...
    'NoiseSpectralSkewnessStdDev', 'PerceptualSpectralCentroidMean', ...
    'PerceptualSpectralCentroidStdDev', 'PerceptualSpectralSpreadMean', ...
    'PerceptualSpectralSpreadStdDev', 'PerceptualSpectralSkewnessMean', ...
    'PerceptualSpectralSkewnessStdDev', 'LoudnessMean', ...
    'LoudnessStdDev', 'SharpnessMean', 'SharpnessStdDev', 'SpreadMean', ...
    'SpreadStdDev', 'SpectralCentroidMean', 'SpectralCentroidStdDev', ...
    'SpectralSpreadMean', 'SpectralSpreadStdDev', ...
    'SpectralSkewnessMean', 'SpectralSkewnessStdDev', ...
    'SpectralVariationMean', 'SpectralVariationStdDev', ...
    'loudnessFactor', 'PartialsMeanEnergy'};
connecDB = connectLocal('root', '', 'ircamSpectralDB');
disp('* Creating new partials array table');
sqlQ = 'CREATE Table Arrays SELECT PartialsFrequencyDimension, PartialsFrequency, PartialsAmplitudeDimension, PartialsAmplitude, PartialsMeanFrequencyDimension, PartialsMeanFrequency, PartialsMeanAmplitudeDimension, PartialsMeanAmplitude, PartialsEnergyDimension, PartialsEnergy, soundID from Sounds';
data = exec(connecDB, sqlQ);
disp(data.Message);
disp('* Getting rid of useless columns :');
for i = 1:length(DROP_Names)
    curName = DROP_Names{i};
    disp(['    - ' curName '.']);
    sqlQ = ['ALTER TABLE Sounds DROP COLUMN ' curName];
	data = exec(connecDB, sqlQ);
	disp(data.Message);
end
disp('* Altering partials types');
sqlQ = 'ALTER Table Sounds MODIFY PartialsFrequency int(34)';
data = exec(connecDB, sqlQ);
disp(data.Message);
sqlQ = 'ALTER Table Sounds MODIFY PartialsAmplitude int(34)';
data = exec(connecDB, sqlQ);
disp(data.Message);
sqlQ = 'ALTER Table Sounds MODIFY PartialsMeanFrequency int(33)';
data = exec(connecDB, sqlQ);
disp(data.Message);
sqlQ = 'ALTER Table Sounds MODIFY PartialsMeanAmplitude int(33)';
data = exec(connecDB, sqlQ);
disp(data.Message);
sqlQ = 'ALTER Table Sounds MODIFY PartialsEnergy int(33)';
data = exec(connecDB, sqlQ);
disp(data.Message);
disp('* Creating SQL Indexes :');
for i = 1:length(SQL_Indexes)
    curName = SQL_Indexes{i};
    disp(['    - ' curName '.']);
    sqlQ = ['CREATE INDEX ' curName '_IDX ON Sounds(' curName ')'];
    data = exec(connecDB, sqlQ);
    disp(data.Message);
end
disp(['    - Arrays ID.']);
sqlQ = 'CREATE INDEX Arrays_IDX ON Arrays(soundID)';
data = exec(connecDB, sqlQ);
disp(data.Message);
databaseFileExport('ircamSpectralDB.db', 'ircamSpectralDB', 'localhost', 'root', []);
disp('* Constructing empty session');
tmpSession = OSession();
tmpSession.constructDefaultSession();
disp('* Constructing DB Map');
export_map('dbmap', [], tmpSession);
%%
TS_Indexes = {'TotalEnergy', 'HarmonicEnergy', 'NoiseEnergy', ...
    'EnergyEnvelope', 'FundamentalFrequency', 'Noisiness', ...
    'Inharmonicity', 'HarmonicSpectralCentroid', ...
    'HarmonicSpectralSpread', 'HarmonicSpectralSkewness', ...
    'NoiseSpectralCentroid', 'PerceptualSpectralCentroid', ...
    'NoiseSpectralSpread', 'NoiseSpectralSkewness', ...
    'PerceptualSpectralSpread', 'PerceptualSpectralSkewness', ...
    'Loudness', 'Sharpness', 'Spread', 'SpectralCentroid', ...
    'SpectralSpread', 'SpectralSkewness', 'SpectralVariation'};
pathHandler('load');
tmpSession = OSession();
tmpSession.constructDefaultSession();
disp('* Constructing time series indexes :');
for i = 1:length(TS_Indexes)
    curName = TS_Indexes{i};
    index = constructIndexesFromDB(tmpSession.getKnowledge(), curName);
    save(['indexes/' curName '.save.mat'], 'index');
    index.removeAllSeries();
    save(['indexes/' curName '.mat'], 'index');
end
    